class CircleVisualiser
{
  float segments = 100;
  float r= 100;
  float cx, cy;
  
  CircleVisualiser()
  {
     cx = width/2;
     cy = height/2;
  }
  
  void render()
  {
    for(int i = 0; i < ai.bufferSize(); i++)
      {
        stroke(map(i,0,ai.bufferSize(),0,255),255,255);
        
        float x = cx + cos(i) * r;
        float y = cy + sin(i) * r;
        float fx = cx + cos(i) * (r + (ai.left.get(i))*50);
        float fy = cy + sin(i) * (r + (ai.left.get(i))*50);
    
        line(x,y,fx,fy);
      }
  
    fft.window(ddf.minim.analysis.FFT.HAMMING);
    fft.forward(ai.left);
  
    for(int i = 0; i < fft.specSize(); i++)
      {
         stroke(map(i,0,ai.bufferSize(),0,255),255,255);
   
         float x = cx + cos(i) * r;
         float y = cy + sin(i) * r;
         float fx = cx + cos(i) * (r + (fft.getBand(i)*5));
         float fy = cy + sin(i) * (r + (fft.getBand(i)*5));
    
         line(x,y,fx,fy);
       }
  }
}
